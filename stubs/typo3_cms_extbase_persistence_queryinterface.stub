<?php

namespace TYPO3\CMS\Extbase\Persistence;

use TYPO3\CMS\Extbase\Persistence\Generic\Qom\AndInterface;
use TYPO3\CMS\Extbase\Persistence\Generic\Qom\ConstraintInterface;
use TYPO3\CMS\Extbase\Persistence\Generic\Qom\OrInterface;

/**
 * @template TEntityClass of object
 */
interface QueryInterface
{
    /**
     * @phpstan-param bool $returnRawQueryResult avoids the object mapping by the persistence
     * @phpstan-return \TYPO3\CMS\Extbase\Persistence\QueryResultInterface<TEntityClass>|TEntityClass[] The query result object or an array if $returnRawQueryResult is TRUE
     */
    public function execute($returnRawQueryResult = false);

    /**
     * @phpstan-param array<string,string> $orderings The property names to order by
     * @phpstan-return static
     */
    public function setOrderings(array $orderings);

    /**
     * @phpstan-param ConstraintInterface|ConstraintInterface[] $constraint1
     * @phpstan-return AndInterface
     */
    public function logicalAnd($constraint1);

    /**
     * @phpstan-param ConstraintInterface|ConstraintInterface[] $constraint1
     * @phpstan-return OrInterface
     */
    public function logicalOr($constraint1);

    /**
     * @phpstan-return class-string<TEntityClass>
     */
    public function getType();

    /**
     * @phpstan-return array<string,string>
     */
    public function getOrderings();
}
